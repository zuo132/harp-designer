{"version":3,"sources":["utils.js","reducers/stringReducer.js","data.js","reducers/soundboardReducer.js","reducers/pillarReducer.js","reducers/neckReducer.js","reducers/settingsReducer.js","store.js","components/Overview.js","actions/stringActions.js","actions/soundboardActions.js","components/SoundboardOptions.js","components/PillarOptions.js","actions/pillarActions.js","actions/neckActions.js","components/NeckOptions.js","components/TuningOptions.js","components/StringMaterialOptions.js","stringGaugeData.js","components/StringOptions.js","components/OptionsPanel.js","components/Body.js","components/Pillar.js","components/Neck.js","components/String.js","components/Measurements.js","components/Harp.js","actions/settingsActions.js","App.js","reportWebVitals.js","index.js"],"names":["stringX","index","stringSpacing","stringY","scale","height","getQBezierValue","t","p1","p2","p3","iT","calculateTension","frequency","length","diameter","p","linearMassDensity","mu","Math","PI","inchToMeter","value","getFrequency","note","octave","keyNumber","charAt","indexOf","slice","pow","getNoteNamesInScale","addNoteName","strings","lowestNote","tuning","notes","lowestNoteName","lowestNoteNumber","parseInt","offset","charCodeAt","stringsWithNoteName","map","string","floor","calculateTensileStress","width","tension","calculateStraightPillarCrossSectionArea","calculateDPillarCrossSectionArea","thickness","id","reverse","array","x","materialDensity","initialState","defaultStringLengths","selectedString","yOffset","stringNumber","totalLoad","reduce","acc","stringReducer","createReducer","SELECT_STRING","state","payload","find","stringId","UPDATE_STRING","stringToUpdate","Object","keys","params","forEach","key","UPDATE_STRING_MATERIAL_DENSITY","density","UPDATE_TUNING","UPDATE_STRING_NUMBER","updatedStrings","updatedDefaultStringLengths","difference","newStrings","i","newString","push","abs","UPDATE_LOWEST_NOTE","UPDATE_Y_OFFSET","soundboardReducer","angle","control","stringBandThickness","UPDATE_SOUNDBOARD_ANGLE","UPDATE_CONTROL_POSITION","position","UPDATE_STRING_BAND_THICKNESS","UPDATE_SOUNDBOARD_LENGTH","pillarReducer","shape","pillarDiameter","pillarWidth","pillarThickness","neckJointWidth","UPDATE_PILLAR_SHAPE","UPDATE_PILLAR_DIAMETER","UPDATE_PILLAR_WIDTH","UPDATE_PILLAR_THICKNESS","UPDATE_NECK_JOINT_WIDTH","neckReducer","neckThickness","tuningPinLength","frontNeckThickness","backNeckThickness","frontNeckTuningPostLength","backNeckTuningPostLength","neckStyle","UPDATE_NECK_THICKNESS","UPDATE_TUNING_PIN_LENGTH","UPDATE_PARAGUAYAN_PARAMS","UPDATE_NECK_STYLE","style","settingsReducer","backgroundColor","UPDATE_BACKGROUND_COLOR","color","reducers","combineReducers","soundboard","pillar","neck","settings","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Overview","dispatch","useDispatch","useSelector","totalTension","useState","numberOfStrings","setNumberOfStrings","setNote","errorMessage","setErrorMessage","toFixed","Form","onSubmit","e","preventDefault","noteNames","noteName","substring","includes","a","createAction","updateLowestNote","updateStringNumber","FormContainer","InputContainer","className","Label","Control","type","onChange","target","InputGroup","hasValidation","required","isInvalid","Feedback","Button","variant","styled","div","Group","updateControlPosition","updateSoundboardLength","SoundboardOptions","soundboardAngle","setSoundboardAngle","bandThickness","setBandThickness","updateSoundboardAngle","InputGroupText","Text","PillarOptions","setDiameter","setWidth","setThickness","neckJoint","setNeckJoint","updateShape","updatePillarShape","StyledButton","onClick","updatePillarDiameter","disabled","updatePillarWidth","updatePillarThickness","updateNeckJointWidth","Range","max","min","updateNeckStyle","NeckOptions","tuningPinLen","setTuningPinLen","frontThickness","setFrontThickness","frontTuningPostLength","setFrontTuningPostLength","backThickness","setBackThickness","backTuningPostLength","setBackTuningPostLength","frontNeckLoad","useMemo","load","backNeckLoad","torqueImbalance","updateNeckThickness","parseFloat","OverlayTrigger","placement","overlay","Tooltip","BlockSpan","span","TuningOptions","updateStringTuning","updateTuning","StringMaterialOptions","setDensity","updateMaterial","updateStringMaterialDensity","ApplyButton","stringGaugeData","name","StringOptions","setFrequency","setLength","setTension","material","setMaterial","lmd","setLmd","stringGauge","setStringGauge","selectedField","setSelectField","useEffect","newFrequency","newLength","newDiameter","newTension","sqrt","calculateFrequency","calculateLength","calculateDiameter","updateString","RadioContainer","Check","checked","Select","gauge","OptionsPanel","MainContainer","OptionsContainer","Container","Body","start","end","useRef","cachedEnd","setCachedEnd","current","y","stroke","strokeWidth","lineJoin","sceneFunc","context","beginPath","moveTo","quadraticCurveTo","lineTo","closePath","fillStrokeShape","ref","radius","fill","draggable","onMouseEnter","document","body","cursor","this","onMouseLeave","onDragMove","onDragEnd","Pillar","dStart","dEnd","lineCap","points","closed","Neck","harpHeight","topNeckPoints","bottomNeckPoints","neckPoints","stringLengths","yPos","defaultPoints","samples","point","lengthDifference","flat","String","listening","Measurements","pointerDirection","pointerWidth","pointerHeight","text","round","fontSize","padding","Harp","setHeight","tooltip","updateYOffset","radians","tan","calculateYOffset","yPosAtSoundboard","stringHeight","evt","layerX","layerY","attrs","getText","show","onMouseOver","onMouseOut","hide","Number","opacity","visible","offsetY","updateBackgroundColor","App","AppContainer","Navbar","bg","Brand","NavDropdown","title","DropdownTitle","NavItemContainer","ColorIndicator","Row","Col","md","CanvasContainer","props","Item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.91fe894d.chunk.js","sourcesContent":["export const stringX = (index, stringSpacing) => {\r\n  return index * stringSpacing + 200;\r\n};\r\n\r\nexport const stringY = (index, scale, height = 600) => {\r\n  return height - index * scale;\r\n};\r\n\r\nexport function getQBezierValue(t, p1, p2, p3) {\r\n  var iT = 1 - t;\r\n  return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3;\r\n}\r\n\r\nexport const calculateTension = (frequency, length, diameter, p = 1.14, linearMassDensity = 0) => {\r\n  const mu = linearMassDensity ? linearMassDensity : (diameter / 2) ** 2 * Math.PI * p * 1000;\r\n  return ((2 * length * frequency) ** 2 * mu) / 9.807;\r\n};\r\n\r\nexport const calculateFrequency = (length, tension, diameter, p = 1.14, linearMassDensity = 0) => {\r\n  const mu = linearMassDensity ? linearMassDensity : (diameter / 2) ** 2 * Math.PI * p * 1000;\r\n  return Math.sqrt((tension * 9.807) / mu) / (2 * length);\r\n};\r\n\r\nexport const calculateLength = (frequency, tension, diameter, p = 1.14, linearMassDensity = 0) => {\r\n  const mu = linearMassDensity ? linearMassDensity : (diameter / 2) ** 2 * Math.PI * p * 1000;\r\n\r\n  return Math.sqrt((tension * 9.807) / mu) / (2 * frequency);\r\n};\r\n\r\nexport const calculateDiameter = (frequency, length, tension, p = 1.14) => {\r\n  return Math.sqrt((tension * 9.807) / ((2 * length * frequency) ** 2 * (Math.PI * p * 1000))) * 2;\r\n};\r\n\r\nexport const inchToMeter = (value) => {\r\n  return (value * 2.54) / 100;\r\n};\r\n\r\nexport const getFrequency = function (note) {\r\n  const notes = ['A', 'A#', 'B', 'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#'];\r\n  let octave, keyNumber;\r\n\r\n  if (note.length === 3) {\r\n    octave = note.charAt(2);\r\n  } else {\r\n    octave = note.charAt(1);\r\n  }\r\n\r\n  keyNumber = notes.indexOf(note.slice(0, -1));\r\n\r\n  if (keyNumber < 3) {\r\n    keyNumber = keyNumber + 12 + (octave - 1) * 12 + 1;\r\n  } else {\r\n    keyNumber = keyNumber + (octave - 1) * 12 + 1;\r\n  }\r\n\r\n  // Return frequency of note\r\n  return 440 * Math.pow(2, (keyNumber - 49) / 12);\r\n};\r\n\r\nexport const getNoteNamesInScale = (scale) => {\r\n  const cMajorNotes = ['C', 'D', 'E', 'F', 'G', 'A', 'B'];\r\n  const eFlatMajorNotes = ['C', 'D', 'D#', 'F', 'G', 'G#', 'A#'];\r\n  const aFlatMajorNotes = ['C', 'C#', 'D#', 'F', 'G', 'G#', 'A#'];\r\n\r\n  return scale === 'C Major'\r\n    ? cMajorNotes\r\n    : scale === 'E Flat Major'\r\n    ? eFlatMajorNotes\r\n    : aFlatMajorNotes;\r\n};\r\n\r\nexport const addNoteName = (strings, lowestNote = 'C2', tuning = 'C Major') => {\r\n  const notes = getNoteNamesInScale(tuning);\r\n\r\n  const lowestNoteName = lowestNote.charAt(0);\r\n  const lowestNoteNumber = parseInt(lowestNote.charAt(lowestNote.length - 1));\r\n  const offset = lowestNoteName.charCodeAt(0) - 'C'.charCodeAt(0);\r\n\r\n  const stringsWithNoteName = strings.map((string, index) => {\r\n    const note =\r\n      notes[(index + offset) % 7] + (lowestNoteNumber + Math.floor((index + offset) / 7));\r\n    return { ...string, note, frequency: getFrequency(note) };\r\n  });\r\n\r\n  return stringsWithNoteName;\r\n};\r\n\r\nexport const calculateTensileStress = (length, width, tension) => {\r\n  return tension / (length * width);\r\n};\r\n\r\nexport const calculateStraightPillarCrossSectionArea = (diameter) => {\r\n  return (diameter / 1000 / 2) ** 2 * Math.PI;\r\n};\r\n\r\nexport const calculateDPillarCrossSectionArea = (width, thickness) => {\r\n  return (width / 1000) * (thickness / 1000);\r\n};\r\n\r\n// Takes angle in degrees\r\nexport const calculateYOffset = (angle, stringSpacing) => {\r\n  const radians = (angle * Math.PI) / 180;\r\n  return stringSpacing * Math.tan(radians);\r\n};\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { stringData } from '../data';\r\nimport { inchToMeter, calculateTension, addNoteName } from '../utils';\r\n\r\nconst strings = addNoteName(stringData.reverse()).map((string, index, array) => {\r\n  const x = array.length - index - 1;\r\n  const length = 0.71 * x ** 2 + 7 * x + 100;\r\n\r\n  return {\r\n    ...string,\r\n    length,\r\n    diameter: inchToMeter(string.diameter) * 1000,\r\n    tension: calculateTension(length / 1000, string.frequency, inchToMeter(string.diameter)),\r\n    materialDensity: 1.14,\r\n    linearMassDensity: 0,\r\n  };\r\n});\r\n\r\nconst initialState = {\r\n  strings,\r\n  defaultStringLengths: strings.map((string) => string.length),\r\n  selectedString: null,\r\n  stringSpacing: 10,\r\n  yOffset: 0,\r\n  materialDensity: 1.14,\r\n  tuning: 'C Major',\r\n  stringNumber: 36,\r\n  lowestNote: 'C2',\r\n  totalLoad: strings.reduce((acc, string) => acc + string.tension, 0),\r\n};\r\n\r\nconst stringReducer = createReducer(initialState, {\r\n  SELECT_STRING: (state, { payload }) => {\r\n    const selectedString = state.strings.find((string) => string.id === payload.stringId);\r\n    return { ...state, selectedString };\r\n  },\r\n\r\n  UPDATE_STRING: (state, { payload }) => {\r\n    const stringToUpdate = state.strings.find((string) => string.id === payload.stringId);\r\n\r\n    Object.keys(payload.params).forEach((key) => {\r\n      stringToUpdate[key] = payload.params[key];\r\n    });\r\n\r\n    state.selectedString = stringToUpdate;\r\n    state.totalLoad = state.strings.reduce((acc, string) => acc + string.tension, 0);\r\n  },\r\n\r\n  UPDATE_STRING_MATERIAL_DENSITY: (state, { payload }) => {\r\n    state.strings.forEach((string) => {\r\n      string.tension = calculateTension(\r\n        string.length / 1000,\r\n        string.frequency,\r\n        string.diameter / 1000,\r\n        payload.density\r\n      );\r\n\r\n      string.materialDensity = payload.density;\r\n    });\r\n\r\n    state.materialDensity = payload.density;\r\n    if (state.selectedString)\r\n      state.selectedString = state.strings.find((string) => string.id === state.selectedString.id);\r\n\r\n    state.totalLoad = state.strings.reduce((acc, string) => acc + string.tension, 0);\r\n  },\r\n\r\n  UPDATE_TUNING: (state, { payload }) => {\r\n    state.strings = addNoteName(state.strings, state.lowestNote, payload.tuning);\r\n    state.strings.forEach((string) => {\r\n      string.tension = calculateTension(\r\n        string.length / 1000,\r\n        string.frequency,\r\n        string.diameter / 1000,\r\n        string.materialDensity,\r\n        string.materialDensity <= 0 ? 0 : string.linearMassDensity\r\n      );\r\n    });\r\n    state.tuning = payload.tuning;\r\n    if (state.selectedString)\r\n      state.selectedString = state.strings.find((string) => string.id === state.selectedString.id);\r\n\r\n    state.totalLoad = state.strings.reduce((acc, string) => acc + string.tension, 0);\r\n  },\r\n\r\n  UPDATE_STRING_NUMBER: (state, { payload }) => {\r\n    let updatedStrings = state.strings;\r\n    let updatedDefaultStringLengths = [];\r\n\r\n    const difference = payload.stringNumber - state.stringNumber;\r\n    if (difference > 0) {\r\n      const newStrings = [];\r\n\r\n      for (let i = 0; i < difference; i++) {\r\n        const x = state.strings.length + i;\r\n        const newString = {\r\n          id: x + 1 + '',\r\n          length: 0.71 * x ** 2 + 7 * x + 100,\r\n          diameter: state.strings[0].diameter,\r\n          materialDensity: state.materialDensity,\r\n        };\r\n        newStrings.push(newString);\r\n      }\r\n\r\n      updatedStrings = addNoteName(\r\n        [...newStrings.reverse(), ...state.strings],\r\n        state.lowestNote,\r\n        state.tuning\r\n      );\r\n\r\n      updatedStrings = updatedStrings.map((string) => {\r\n        const tension = calculateTension(\r\n          string.length / 1000,\r\n          string.frequency,\r\n          string.diameter / 1000,\r\n          string.materialDensity,\r\n          string.materialDensity <= 0 ? 0 : string.linearMassDensity\r\n        );\r\n\r\n        return { ...string, tension };\r\n      });\r\n\r\n      updatedDefaultStringLengths = [\r\n        ...newStrings.map((string) => string.length),\r\n        ...state.defaultStringLengths,\r\n      ];\r\n    } else if (difference < 0) {\r\n      updatedStrings = addNoteName(\r\n        state.strings.slice(Math.abs(difference)),\r\n        state.lowestNote,\r\n        state.tuning\r\n      ).map((string) => {\r\n        const tension = calculateTension(\r\n          string.length / 1000,\r\n          string.frequency,\r\n          string.diameter / 1000,\r\n          string.materialDensity,\r\n          string.materialDensity <= 0 ? 0 : string.linearMassDensity\r\n        );\r\n\r\n        return { ...string, tension };\r\n      });\r\n\r\n      updatedDefaultStringLengths = state.defaultStringLengths.slice(Math.abs(difference));\r\n    }\r\n\r\n    return {\r\n      ...state,\r\n      stringNumber: payload.stringNumber,\r\n      strings: updatedStrings,\r\n      defaultStringLengths: updatedDefaultStringLengths,\r\n      totalLoad: state.strings.reduce((acc, string) => acc + string.tension, 0),\r\n      selectedString: null,\r\n    };\r\n  },\r\n\r\n  UPDATE_LOWEST_NOTE: (state, { payload }) => {\r\n    let updatedStrings = addNoteName(state.strings, payload.lowestNote, state.tuning);\r\n    updatedStrings = updatedStrings.map((string) => {\r\n      const tension = calculateTension(\r\n        string.length / 1000,\r\n        string.frequency,\r\n        string.diameter / 1000,\r\n        string.materialDensity,\r\n        string.materialDensity <= 0 ? 0 : string.linearMassDensity\r\n      );\r\n\r\n      return { ...string, tension };\r\n    });\r\n\r\n    return {\r\n      ...state,\r\n      lowestNote: payload.lowestNote,\r\n      strings: updatedStrings,\r\n      totalLoad: updatedStrings.reduce((acc, string) => acc + string.tension, 0),\r\n      selectedString:\r\n        state.selectedString &&\r\n        updatedStrings.find((string) => string.id === state.selectedString.id),\r\n    };\r\n  },\r\n\r\n  UPDATE_Y_OFFSET: (state, { payload }) => {\r\n    return { ...state, yOffset: payload.yOffset };\r\n  },\r\n});\r\n\r\nexport default stringReducer;\r\n","export const stringData = [\r\n  {\r\n    id: '1',\r\n    frequency: 1864.655,\r\n    length: 80.0,\r\n    tension: 6.661,\r\n    diameter: 0.025,\r\n  },\r\n  {\r\n    id: '2',\r\n    frequency: 1760.0,\r\n    length: 100.0,\r\n    tension: 9.272,\r\n    diameter: 0.025,\r\n  },\r\n  {\r\n    id: '3',\r\n    frequency: 1567.982,\r\n    length: 123.0,\r\n    tension: 11.134,\r\n    diameter: 0.025,\r\n  },\r\n  {\r\n    id: '4',\r\n    frequency: 1396.913,\r\n    length: 145.0,\r\n    tension: 12.281,\r\n    diameter: 0.025,\r\n  },\r\n  {\r\n    id: '5',\r\n    frequency: 1318.51,\r\n    length: 165.0,\r\n    tension: 14.168,\r\n    diameter: 0.025,\r\n  },\r\n  {\r\n    id: '6',\r\n    frequency: 1174.659,\r\n    length: 175.0,\r\n    tension: 12.649,\r\n    diameter: 0.025,\r\n  },\r\n  {\r\n    id: '7',\r\n    frequency: 1046.502,\r\n    length: 190.0,\r\n    tension: 11.835,\r\n    diameter: 0.025,\r\n  },\r\n  {\r\n    id: '8',\r\n    frequency: 932.328,\r\n    length: 225.0,\r\n    tension: 16.524,\r\n    diameter: 0.028,\r\n  },\r\n  {\r\n    id: '9',\r\n    frequency: 880.0,\r\n    length: 240.0,\r\n    tension: 16.749,\r\n    diameter: 0.028,\r\n  },\r\n  {\r\n    id: '10',\r\n    frequency: 783.991,\r\n    length: 260.0,\r\n    tension: 15.602,\r\n    diameter: 0.028,\r\n  },\r\n  {\r\n    id: '11',\r\n    frequency: 698.456,\r\n    length: 275.0,\r\n    tension: 13.853,\r\n    diameter: 0.028,\r\n  },\r\n  {\r\n    id: '12',\r\n    frequency: 659.255,\r\n    length: 295.0,\r\n    tension: 18.55,\r\n    diameter: 0.032,\r\n  },\r\n  {\r\n    id: '13',\r\n    frequency: 587.33,\r\n    length: 315.0,\r\n    tension: 16.787,\r\n    diameter: 0.032,\r\n  },\r\n  {\r\n    id: '14',\r\n    frequency: 523.251,\r\n    length: 330.0,\r\n    tension: 14.623,\r\n    diameter: 0.032,\r\n  },\r\n  {\r\n    id: '15',\r\n    frequency: 466.164,\r\n    length: 348.0,\r\n    tension: 12.907,\r\n    diameter: 0.032,\r\n  },\r\n  {\r\n    id: '16',\r\n    frequency: 440.0,\r\n    length: 370.0,\r\n    tension: 12.999,\r\n    diameter: 0.032,\r\n  },\r\n  {\r\n    id: '17',\r\n    frequency: 391.995,\r\n    length: 390.0,\r\n    tension: 14.507,\r\n    diameter: 0.036,\r\n  },\r\n  {\r\n    id: '18',\r\n    frequency: 349.228,\r\n    length: 415.0,\r\n    tension: 13.038,\r\n    diameter: 0.036,\r\n  },\r\n  {\r\n    id: '19',\r\n    frequency: 329.628,\r\n    length: 445.0,\r\n    tension: 13.355,\r\n    diameter: 0.036,\r\n  },\r\n  {\r\n    id: '20',\r\n    frequency: 293.665,\r\n    length: 477.0,\r\n    tension: 15.036,\r\n    diameter: 0.04,\r\n  },\r\n  {\r\n    id: '21',\r\n    frequency: 261.626,\r\n    length: 510.0,\r\n    tension: 23.057,\r\n    diameter: 0.052,\r\n  },\r\n  {\r\n    id: '22',\r\n    frequency: 233.082,\r\n    length: 545.0,\r\n    tension: 20.898,\r\n    diameter: 0.052,\r\n  },\r\n  {\r\n    id: '23',\r\n    frequency: 220.0,\r\n    length: 585.0,\r\n    tension: 21.451,\r\n    diameter: 0.052,\r\n  },\r\n  {\r\n    id: '24',\r\n    frequency: 195.998,\r\n    length: 628.0,\r\n    tension: 19.621,\r\n    diameter: 0.052,\r\n  },\r\n  {\r\n    id: '25',\r\n    frequency: 174.614,\r\n    length: 675.0,\r\n    tension: 17.991,\r\n    diameter: 0.052,\r\n  },\r\n  {\r\n    id: '26',\r\n    frequency: 164.814,\r\n    length: 728.0,\r\n    tension: 18.644,\r\n    diameter: 0.052,\r\n  },\r\n  {\r\n    id: '27',\r\n    frequency: 146.832,\r\n    length: 785.0,\r\n    tension: 19.955,\r\n    diameter: 0.056,\r\n  },\r\n  {\r\n    id: '28',\r\n    frequency: 130.813,\r\n    length: 850.0,\r\n    tension: 21.317,\r\n    diameter: 0.06,\r\n  },\r\n  {\r\n    id: '29',\r\n    frequency: 116.541,\r\n    length: 900.0,\r\n    tension: 22.262,\r\n    diameter: 0.065,\r\n  },\r\n  {\r\n    id: '30',\r\n    frequency: 110.0,\r\n    length: 950.0,\r\n    tension: 30.21,\r\n    diameter: 0.076,\r\n  },\r\n  {\r\n    id: '31',\r\n    frequency: 97.999,\r\n    length: 1000.0,\r\n    tension: 29.438,\r\n    diameter: 0.08,\r\n  },\r\n  {\r\n    id: '32',\r\n    frequency: 87.307,\r\n    length: 1045.0,\r\n    tension: 28.804,\r\n    diameter: 0.085,\r\n  },\r\n  {\r\n    id: '33',\r\n    frequency: 82.407,\r\n    length: 1090.0,\r\n    tension: 32.0,\r\n    diameter: 0.091,\r\n  },\r\n  {\r\n    id: '34',\r\n    frequency: 73.416,\r\n    length: 1130.0,\r\n    tension: 30.378,\r\n    diameter: 0.096,\r\n  },\r\n  {\r\n    id: '35',\r\n    frequency: 65.406,\r\n    length: 1168.0,\r\n    tension: 27.952,\r\n    diameter: 0.1,\r\n  },\r\n  {\r\n    id: '36',\r\n    frequency: 58.27,\r\n    length: 1205.0,\r\n    tension: 23.613,\r\n    diameter: 0.1,\r\n  },\r\n];\r\n","import { createReducer } from '@reduxjs/toolkit';\r\n\r\nconst initialState = { angle: 50, control: null, stringBandThickness: 20, length: 0 };\r\n\r\nconst soundboardReducer = createReducer(initialState, {\r\n  UPDATE_SOUNDBOARD_ANGLE: (state, { payload }) => {\r\n    return { ...state, angle: payload.angle };\r\n  },\r\n\r\n  UPDATE_CONTROL_POSITION: (state, { payload }) => {\r\n    return { ...state, control: payload.position };\r\n  },\r\n\r\n  UPDATE_STRING_BAND_THICKNESS: (state, { payload }) => {\r\n    return { ...state, stringBandThickness: payload.thickness };\r\n  },\r\n\r\n  UPDATE_SOUNDBOARD_LENGTH: (state, { payload }) => {\r\n    return { ...state, length: payload.length };\r\n  },\r\n});\r\n\r\nexport default soundboardReducer;\r\n","import { createReducer } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  shape: 'Straight',\r\n  pillarDiameter: 30,\r\n  pillarWidth: 40,\r\n  pillarThickness: 20,\r\n  neckJointWidth: 2,\r\n};\r\n\r\nconst pillarReducer = createReducer(initialState, {\r\n  UPDATE_PILLAR_SHAPE: (state, { payload }) => {\r\n    return { ...state, shape: payload.shape };\r\n  },\r\n\r\n  UPDATE_PILLAR_DIAMETER: (state, { payload }) => {\r\n    return { ...state, pillarDiameter: payload.diameter };\r\n  },\r\n\r\n  UPDATE_PILLAR_WIDTH: (state, { payload }) => {\r\n    return { ...state, pillarWidth: payload.width };\r\n  },\r\n\r\n  UPDATE_PILLAR_THICKNESS: (state, { payload }) => {\r\n    return { ...state, pillarThickness: payload.thickness };\r\n  },\r\n\r\n  UPDATE_NECK_JOINT_WIDTH: (state, { payload }) => {\r\n    return { ...state, neckJointWidth: payload.width };\r\n  },\r\n});\r\n\r\nexport default pillarReducer;\r\n","import { createReducer } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  neckThickness: 40,\r\n  tuningPinLength: 20,\r\n  frontNeckThickness: 15,\r\n  backNeckThickness: 15,\r\n  frontNeckTuningPostLength: 10,\r\n  backNeckTuningPostLength: 10,\r\n  neckStyle: 'Standard',\r\n};\r\n\r\nconst neckReducer = createReducer(initialState, {\r\n  UPDATE_NECK_THICKNESS: (state, { payload }) => {\r\n    return { ...state, neckThickness: payload.thickness };\r\n  },\r\n\r\n  UPDATE_TUNING_PIN_LENGTH: (state, { payload }) => {\r\n    return { ...state, tuningPinLength: payload.length };\r\n  },\r\n\r\n  UPDATE_PARAGUAYAN_PARAMS: (state, { payload }) => {\r\n    Object.keys(payload.params).forEach((key) => {\r\n      state[key] = payload.params[key];\r\n    });\r\n  },\r\n\r\n  UPDATE_NECK_STYLE: (state, { payload }) => {\r\n    return { ...state, neckStyle: payload.style };\r\n  },\r\n});\r\n\r\nexport default neckReducer;\r\n","import { createReducer } from '@reduxjs/toolkit';\r\n\r\nconst initialState = { backgroundColor: 'burlywood' };\r\n\r\nconst settingsReducer = createReducer(initialState, {\r\n  UPDATE_BACKGROUND_COLOR: (state, { payload }) => {\r\n    return { ...state, backgroundColor: payload.color };\r\n  },\r\n});\r\n\r\nexport default settingsReducer;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport stringReducer from './reducers/stringReducer';\r\nimport soundboardReducer from './reducers/soundboardReducer';\r\nimport pillarReducer from './reducers/pillarReducer';\r\nimport neckReducer from './reducers/neckReducer';\r\nimport settingsReducer from './reducers/settingsReducer';\r\n\r\nconst reducers = combineReducers({\r\n  string: stringReducer,\r\n  soundboard: soundboardReducer,\r\n  pillar: pillarReducer,\r\n  neck: neckReducer,\r\n  settings: settingsReducer,\r\n});\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Form, Button, InputGroup } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport { updateLowestNote, updateStringNumber } from '../actions/stringActions';\r\nimport { getNoteNamesInScale } from '../utils';\r\n\r\nconst Overview = () => {\r\n  const dispatch = useDispatch();\r\n  const { strings, stringNumber, lowestNote, tuning } = useSelector((state) => state.string);\r\n  let totalTension = 0;\r\n  strings.forEach((string) => {\r\n    totalTension += string.tension;\r\n  });\r\n\r\n  const [numberOfStrings, setNumberOfStrings] = useState(stringNumber);\r\n  const [note, setNote] = useState(lowestNote);\r\n  const [errorMessage, setErrorMessage] = useState();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrorMessage(null);\r\n\r\n    if (note !== lowestNote) {\r\n      const noteNames = getNoteNamesInScale(tuning);\r\n\r\n      const noteName = note.length === 3 ? note.substring(0, 2) : note.substring(0, 1);\r\n      if (noteNames.includes(noteName)) {\r\n        dispatch(updateLowestNote(note));\r\n      } else {\r\n        setErrorMessage('Invalid note, the valid notes are: ' + noteNames);\r\n      }\r\n    }\r\n    if (parseInt(numberOfStrings) !== stringNumber) {\r\n      dispatch(updateStringNumber(parseInt(numberOfStrings)));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h5>Overview</h5>\r\n\r\n      <span>\r\n        Total Tension: <b>{totalTension.toFixed(2)}</b> kg\r\n      </span>\r\n      <p></p>\r\n\r\n      <Form onSubmit={handleSubmit}>\r\n        <FormContainer>\r\n          <InputContainer className='mb-3'>\r\n            <Form.Label>Number of Strings</Form.Label>\r\n\r\n            <Form.Control\r\n              type='number'\r\n              value={numberOfStrings}\r\n              onChange={(e) => setNumberOfStrings(e.target.value)}\r\n            ></Form.Control>\r\n          </InputContainer>\r\n\r\n          <InputContainer className='mb-3'>\r\n            <Form.Label>Lowest Note</Form.Label>\r\n\r\n            <InputGroup hasValidation>\r\n              <Form.Control\r\n                type='text'\r\n                value={note}\r\n                onChange={(e) => setNote(e.target.value)}\r\n                required\r\n                isInvalid={errorMessage}\r\n              />\r\n              <Form.Control.Feedback type='invalid'>{errorMessage}</Form.Control.Feedback>\r\n            </InputGroup>\r\n          </InputContainer>\r\n        </FormContainer>\r\n\r\n        <Button className='btn-sm' type='submit' variant='secondary'>\r\n          Apply\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Overview;\r\n\r\nconst FormContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst InputContainer = styled(Form.Group)`\r\n  flex: 1;\r\n`;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const selectString = (stringId) => async (dispatch) => {\r\n  dispatch(createAction('SELECT_STRING')({ stringId }));\r\n};\r\n\r\nexport const updateString = (stringId, params) => async (dispatch) => {\r\n  dispatch(createAction('UPDATE_STRING')({ stringId, params }));\r\n};\r\n\r\nexport const updateStringMaterialDensity = (density) => async (dispatch) => {\r\n  dispatch(createAction('UPDATE_STRING_MATERIAL_DENSITY')({ density }));\r\n};\r\n\r\nexport const updateTuning = (tuning) => async (dispatch) => {\r\n  dispatch(createAction('UPDATE_TUNING')({ tuning }));\r\n};\r\n\r\nexport const updateStringNumber = (stringNumber) => async (dispatch) => {\r\n  dispatch(createAction('UPDATE_STRING_NUMBER')({ stringNumber }));\r\n};\r\n\r\nexport const updateLowestNote = (lowestNote) => async (dispatch) => {\r\n  dispatch(createAction('UPDATE_LOWEST_NOTE')({ lowestNote }));\r\n};\r\n\r\nexport const updateYOffset = (yOffset) => async (dispatch) => {\r\n  dispatch(createAction('UPDATE_Y_OFFSET')({ yOffset }));\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const updateSoundboardAngle = (angle) => async (dispatch) => {\r\n  dispatch(createAction('UPDATE_SOUNDBOARD_ANGLE')({ angle }));\r\n};\r\n\r\nexport const updateControlPosition = (position) => async (dispatch) => {\r\n  dispatch(createAction('UPDATE_CONTROL_POSITION')({ position }));\r\n};\r\n\r\nexport const updateStringBandThickness = (thickness) => async (dispatch) => {\r\n  dispatch(createAction('UPDATE_STRING_BAND_THICKNESS')({ thickness }));\r\n};\r\n\r\nexport const updateSoundboardLength = (length) => async (dispatch) => {\r\n  dispatch(createAction('UPDATE_SOUNDBOARD_LENGTH')({ length }));\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Form, InputGroup, Button } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport { updateSoundboardAngle, updateStringBandThickness } from '../actions/soundboardActions';\r\nimport { calculateTensileStress } from '../utils';\r\n\r\nconst SoundboardOptions = () => {\r\n  const dispatch = useDispatch();\r\n  const { totalLoad } = useSelector((state) => state.string);\r\n  const { angle, stringBandThickness, length } = useSelector((state) => state.soundboard);\r\n\r\n  const [soundboardAngle, setSoundboardAngle] = useState(angle);\r\n  const [bandThickness, setBandThickness] = useState(stringBandThickness);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (soundboardAngle && soundboardAngle !== angle)\r\n      dispatch(updateSoundboardAngle(parseInt(soundboardAngle)));\r\n    if (bandThickness && bandThickness !== stringBandThickness)\r\n      dispatch(updateStringBandThickness(bandThickness));\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <h5>Soundboard</h5>\r\n\r\n      <Form.Group className='mb-3'>\r\n        <Form.Label>Soundboard Angle</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type='number'\r\n            value={soundboardAngle}\r\n            onChange={(e) => setSoundboardAngle(e.target.value)}\r\n          ></Form.Control>\r\n          <InputGroupText>&#176;</InputGroupText>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      <p>\r\n        Tensile Stress:{' '}\r\n        <b>\r\n          {(\r\n            calculateTensileStress(\r\n              length / 1000,\r\n              stringBandThickness / 1000,\r\n              totalLoad * 0.5 * 9.807\r\n            ) / 1000000\r\n          ).toFixed(6)}\r\n        </b>{' '}\r\n        MPa\r\n      </p>\r\n\r\n      <Form.Group className='mb-3'>\r\n        <Form.Label>String Band Thickness</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type='number'\r\n            value={bandThickness}\r\n            onChange={(e) => setBandThickness(e.target.value)}\r\n          ></Form.Control>\r\n          <InputGroupText>mm</InputGroupText>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      <Button className='btn-sm' type='submit' variant='secondary'>\r\n        Apply\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SoundboardOptions;\r\n\r\nconst InputGroupText = styled(InputGroup.Text)`\r\n  min-width: 70px;\r\n  display: inline-block;\r\n  text-align: center;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { Button, Form, InputGroup } from 'react-bootstrap';\r\nimport {\r\n  updatePillarShape,\r\n  updatePillarDiameter,\r\n  updatePillarWidth,\r\n  updatePillarThickness,\r\n  updateNeckJointWidth,\r\n} from '../actions/pillarActions';\r\nimport {\r\n  calculateStraightPillarCrossSectionArea,\r\n  calculateDPillarCrossSectionArea,\r\n} from '../utils';\r\n\r\nconst PillarOptions = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { totalLoad } = useSelector((state) => state.string);\r\n  const { shape, pillarDiameter, pillarWidth, pillarThickness, neckJointWidth } = useSelector(\r\n    (state) => state.pillar\r\n  );\r\n\r\n  const [diameter, setDiameter] = useState(pillarDiameter);\r\n  const [width, setWidth] = useState(pillarWidth);\r\n  const [thickness, setThickness] = useState(pillarThickness);\r\n  const [neckJoint, setNeckJoint] = useState(neckJointWidth);\r\n\r\n  const updateShape = (shape) => {\r\n    dispatch(updatePillarShape(shape));\r\n  };\r\n\r\n  const updateDiameter = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updatePillarDiameter(diameter));\r\n  };\r\n\r\n  const updateWidthAndThickness = (e) => {\r\n    e.preventDefault();\r\n    if (width && width !== pillarWidth) dispatch(updatePillarWidth(width));\r\n    if (thickness && thickness !== pillarThickness) dispatch(updatePillarThickness(thickness));\r\n    if (neckJoint && neckJoint !== neckJointWidth)\r\n      dispatch(updateNeckJointWidth(parseInt(neckJoint)));\r\n  };\r\n\r\n  const calculateCrossSectionArea = () => {\r\n    if (shape === 'Straight') {\r\n      return calculateStraightPillarCrossSectionArea(pillarDiameter);\r\n    } else {\r\n      return calculateDPillarCrossSectionArea(pillarWidth, pillarThickness);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h5>Pillar</h5>\r\n\r\n      <StyledButton\r\n        variant={shape === 'Straight' ? 'primary' : 'secondary'}\r\n        onClick={() => updateShape('Straight')}\r\n      >\r\n        Straight\r\n      </StyledButton>\r\n      <StyledButton\r\n        variant={shape === 'D Shape' ? 'primary' : 'secondary'}\r\n        onClick={() => updateShape('D Shape')}\r\n      >\r\n        D Shape\r\n      </StyledButton>\r\n\r\n      <p>\r\n        Compresive Stress:{' '}\r\n        <b>{((totalLoad * 0.6 * 9.807) / calculateCrossSectionArea() / 1000000).toFixed(6)}</b> MPa\r\n      </p>\r\n\r\n      {shape === 'Straight' ? (\r\n        <Form onSubmit={updateDiameter}>\r\n          <Form.Group className='mb-3'>\r\n            <Form.Label>Pillar Diameter</Form.Label>\r\n            <InputGroup>\r\n              <Form.Control\r\n                type='number'\r\n                value={diameter}\r\n                onChange={(e) => setDiameter(e.target.value)}\r\n              ></Form.Control>\r\n              <InputGroupText>mm</InputGroupText>\r\n            </InputGroup>\r\n          </Form.Group>\r\n\r\n          <Button className='btn-sm' type='submit' variant='secondary' disabled={!diameter}>\r\n            Apply\r\n          </Button>\r\n        </Form>\r\n      ) : (\r\n        <Form onSubmit={updateWidthAndThickness}>\r\n          <Form.Group className='mb-1'>\r\n            <Form.Label>Pillar Width</Form.Label>\r\n            <InputGroup>\r\n              <Form.Control\r\n                type='number'\r\n                value={width}\r\n                onChange={(e) => setWidth(e.target.value)}\r\n              ></Form.Control>\r\n              <InputGroupText>mm</InputGroupText>\r\n            </InputGroup>\r\n          </Form.Group>\r\n\r\n          <Form.Group className='mb-1'>\r\n            <Form.Label>Pillar Thickness</Form.Label>\r\n            <InputGroup>\r\n              <Form.Control\r\n                type='number'\r\n                value={thickness}\r\n                onChange={(e) => setThickness(e.target.value)}\r\n              ></Form.Control>\r\n              <InputGroupText>mm</InputGroupText>\r\n            </InputGroup>\r\n          </Form.Group>\r\n\r\n          <Form.Group className='mb-3'>\r\n            <Form.Label>Neck Joint Width</Form.Label>\r\n            <Form.Range\r\n              max={5}\r\n              min={1}\r\n              value={neckJoint}\r\n              onChange={(e) => setNeckJoint(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button className='btn-sm' type='submit' variant='secondary'>\r\n            Apply\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PillarOptions;\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin: 0 1rem 1rem 0;\r\n`;\r\n\r\nconst InputGroupText = styled(InputGroup.Text)`\r\n  min-width: 70px;\r\n  display: inline-block;\r\n  text-align: center;\r\n`;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const updatePillarShape = (shape) => async (dispatch) => {\r\n  dispatch(createAction('UPDATE_PILLAR_SHAPE')({ shape }));\r\n};\r\n\r\nexport const updatePillarDiameter = (diameter) => async (dispatch) => {\r\n  dispatch(createAction('UPDATE_PILLAR_DIAMETER')({ diameter }));\r\n};\r\n\r\nexport const updatePillarWidth = (width) => async (dispatch) => {\r\n  dispatch(createAction('UPDATE_PILLAR_WIDTH')({ width }));\r\n};\r\n\r\nexport const updatePillarThickness = (thickness) => async (dispatch) => {\r\n  dispatch(createAction('UPDATE_PILLAR_THICKNESS')({ thickness }));\r\n};\r\n\r\nexport const updateNeckJointWidth = (width) => async (dispatch) => {\r\n  dispatch(createAction('UPDATE_NECK_JOINT_WIDTH')({ width }));\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const updateNeckThickness = (thickness) => async (dispatch) => {\r\n  dispatch(createAction('UPDATE_NECK_THICKNESS')({ thickness }));\r\n};\r\n\r\nexport const updateTuningPinLength = (length) => async (dispatch) => {\r\n  dispatch(createAction('UPDATE_TUNING_PIN_LENGTH')({ length }));\r\n};\r\n\r\nexport const updateParaguayanParams = (params) => async (dispatch) => {\r\n  dispatch(createAction('UPDATE_PARAGUAYAN_PARAMS')({ params }));\r\n};\r\n\r\nexport const updateNeckStyle = (style) => async (dispatch) => {\r\n  dispatch(createAction('UPDATE_NECK_STYLE')({ style }));\r\n};\r\n","import React, { useState, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Form, InputGroup, Button, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport {\r\n  updateTuningPinLength,\r\n  updateNeckThickness,\r\n  updateParaguayanParams,\r\n  updateNeckStyle,\r\n} from '../actions/neckActions';\r\nimport { stringX, calculateTensileStress } from '../utils';\r\n\r\nconst NeckOptions = () => {\r\n  const dispatch = useDispatch();\r\n  const { strings, stringSpacing, stringNumber, totalLoad } = useSelector((state) => state.string);\r\n  const {\r\n    neckThickness,\r\n    tuningPinLength,\r\n    frontNeckThickness,\r\n    frontNeckTuningPostLength,\r\n    backNeckThickness,\r\n    backNeckTuningPostLength,\r\n    neckStyle,\r\n  } = useSelector((state) => state.neck);\r\n\r\n  const [thickness, setThickness] = useState(neckThickness);\r\n  const [tuningPinLen, setTuningPinLen] = useState(tuningPinLength);\r\n  const [frontThickness, setFrontThickness] = useState(frontNeckThickness);\r\n  const [frontTuningPostLength, setFrontTuningPostLength] = useState(frontNeckTuningPostLength);\r\n  const [backThickness, setBackThickness] = useState(backNeckThickness);\r\n  const [backTuningPostLength, setBackTuningPostLength] = useState(backNeckTuningPostLength);\r\n\r\n  const frontNeckLoad = useMemo(() => {\r\n    let load = 0;\r\n    [...strings].reverse().forEach((string, index) => {\r\n      if (index % 2 === 0) load += string.tension;\r\n    });\r\n\r\n    return load;\r\n  }, [strings]);\r\n\r\n  const backNeckLoad = useMemo(() => {\r\n    let load = 0;\r\n    [...strings].reverse().forEach((string, index) => {\r\n      if (index % 2 === 1) load += string.tension;\r\n    });\r\n\r\n    return load;\r\n  }, [strings]);\r\n\r\n  const torqueImbalance = useMemo(() => {\r\n    const imbalance =\r\n      (frontNeckTuningPostLength / 1000) * frontNeckLoad * 9.807 -\r\n      (backNeckTuningPostLength / 1000) * backNeckLoad * 9.807;\r\n\r\n    return imbalance;\r\n  }, [frontNeckTuningPostLength, backNeckTuningPostLength, frontNeckLoad, backNeckLoad]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (neckStyle === 'Standard') {\r\n      dispatch(updateNeckThickness(parseFloat(thickness)));\r\n      dispatch(updateTuningPinLength(parseFloat(tuningPinLen)));\r\n    } else if (neckStyle === 'Paraguayan') {\r\n      dispatch(\r\n        updateParaguayanParams({\r\n          frontNeckThickness: frontThickness,\r\n          frontNeckTuningPostLength: frontTuningPostLength,\r\n          backNeckThickness: backThickness,\r\n          backNeckTuningPostLength: backTuningPostLength,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h5>Neck</h5>\r\n\r\n      <StyledButton\r\n        variant={neckStyle === 'Standard' ? 'primary' : 'secondary'}\r\n        onClick={() => neckStyle !== 'Standard' && dispatch(updateNeckStyle('Standard'))}\r\n      >\r\n        Standard\r\n      </StyledButton>\r\n      <StyledButton\r\n        variant={neckStyle === 'Paraguayan' ? 'primary' : 'secondary'}\r\n        onClick={() => neckStyle !== 'Paraguayan' && dispatch(updateNeckStyle('Paraguayan'))}\r\n      >\r\n        Paraguayan\r\n      </StyledButton>\r\n\r\n      <Form onSubmit={handleSubmit}>\r\n        {neckStyle === 'Standard' && (\r\n          <>\r\n            <p>\r\n              Tensile Stress:{' '}\r\n              <b>\r\n                {(\r\n                  calculateTensileStress(\r\n                    (stringX(stringNumber + 3, stringSpacing) +\r\n                      20 -\r\n                      (stringX(-4, stringSpacing) - 30)) /\r\n                      0.4 /\r\n                      1000,\r\n                    neckThickness / 1000,\r\n                    totalLoad * 9.807\r\n                  ) / 1000000\r\n                ).toFixed(6)}\r\n              </b>{' '}\r\n              MPa\r\n            </p>\r\n\r\n            <p>\r\n              Torque: <b>{((tuningPinLength / 1000) * totalLoad * 9.807).toFixed(6)}</b> N m\r\n            </p>\r\n\r\n            <Form.Group className='mb-1'>\r\n              <Form.Label>Neck Thickness</Form.Label>\r\n              <InputGroup>\r\n                <Form.Control\r\n                  type='number'\r\n                  value={thickness}\r\n                  onChange={(e) => setThickness(e.target.value)}\r\n                ></Form.Control>\r\n                <InputGroupText>mm</InputGroupText>\r\n              </InputGroup>\r\n            </Form.Group>\r\n\r\n            <Form.Group className='mb-3'>\r\n              <Form.Label>Tuning Pin Length</Form.Label>\r\n              <InputGroup>\r\n                <Form.Control\r\n                  type='number'\r\n                  value={tuningPinLen}\r\n                  onChange={(e) => setTuningPinLen(e.target.value)}\r\n                ></Form.Control>\r\n                <InputGroupText>mm</InputGroupText>\r\n              </InputGroup>\r\n            </Form.Group>\r\n          </>\r\n        )}\r\n\r\n        {neckStyle === 'Paraguayan' && (\r\n          <>\r\n            <OverlayTrigger\r\n              placement='right'\r\n              overlay={\r\n                <Tooltip id='torque-imbalance-tooltip'>\r\n                  Front neck torque is {Math.abs(torqueImbalance).toFixed(6)} Nm{' '}\r\n                  {torqueImbalance > 0 ? 'greater' : 'less'} than back neck torque\r\n                </Tooltip>\r\n              }\r\n            >\r\n              <BlockSpan>\r\n                Torque Imbalance <b>{torqueImbalance.toFixed(6)}</b> N m\r\n              </BlockSpan>\r\n            </OverlayTrigger>\r\n\r\n            <p>\r\n              <b>Front Neck</b>\r\n            </p>\r\n\r\n            <p>\r\n              Tensile Stress:{' '}\r\n              <b>\r\n                {(\r\n                  calculateTensileStress(\r\n                    (stringX(stringNumber + 3, stringSpacing) +\r\n                      20 -\r\n                      (stringX(-4, stringSpacing) - 30)) /\r\n                      0.4 /\r\n                      1000,\r\n                    frontNeckThickness / 1000,\r\n                    (frontNeckLoad / 2) * 9.807\r\n                  ) / 1000000\r\n                ).toFixed(6)}\r\n              </b>{' '}\r\n              MPa\r\n            </p>\r\n\r\n            <Form.Group className='mb-1'>\r\n              <Form.Label>Neck Thickness</Form.Label>\r\n              <InputGroup>\r\n                <Form.Control\r\n                  type='number'\r\n                  value={frontThickness}\r\n                  onChange={(e) => setFrontThickness(e.target.value)}\r\n                ></Form.Control>\r\n                <InputGroupText>mm</InputGroupText>\r\n              </InputGroup>\r\n            </Form.Group>\r\n\r\n            <Form.Group className='mb-3'>\r\n              <Form.Label>Tuning Post Length</Form.Label>\r\n              <InputGroup>\r\n                <Form.Control\r\n                  type='number'\r\n                  value={frontTuningPostLength}\r\n                  onChange={(e) => setFrontTuningPostLength(e.target.value)}\r\n                ></Form.Control>\r\n                <InputGroupText>mm</InputGroupText>\r\n              </InputGroup>\r\n            </Form.Group>\r\n\r\n            <p>\r\n              <b>Back Neck</b>\r\n            </p>\r\n\r\n            <p>\r\n              Tensile Stress:{' '}\r\n              <b>\r\n                {(\r\n                  calculateTensileStress(\r\n                    (stringX(stringNumber + 3, stringSpacing) +\r\n                      20 -\r\n                      (stringX(-4, stringSpacing) - 30)) /\r\n                      0.4 /\r\n                      1000,\r\n                    backNeckThickness / 1000,\r\n                    (backNeckLoad / 2) * 9.807\r\n                  ) / 1000000\r\n                ).toFixed(6)}\r\n              </b>{' '}\r\n              MPa\r\n            </p>\r\n\r\n            <Form.Group className='mb-1'>\r\n              <Form.Label>Neck Thickness</Form.Label>\r\n              <InputGroup>\r\n                <Form.Control\r\n                  type='number'\r\n                  value={backThickness}\r\n                  onChange={(e) => setBackThickness(e.target.value)}\r\n                ></Form.Control>\r\n                <InputGroupText>mm</InputGroupText>\r\n              </InputGroup>\r\n            </Form.Group>\r\n\r\n            <Form.Group className='mb-3'>\r\n              <Form.Label>Tuning Post Length</Form.Label>\r\n              <InputGroup>\r\n                <Form.Control\r\n                  type='number'\r\n                  value={backTuningPostLength}\r\n                  onChange={(e) => setBackTuningPostLength(e.target.value)}\r\n                ></Form.Control>\r\n                <InputGroupText>mm</InputGroupText>\r\n              </InputGroup>\r\n            </Form.Group>\r\n          </>\r\n        )}\r\n\r\n        <Button className='btn-sm' type='submit' variant='secondary'>\r\n          Apply\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NeckOptions;\r\n\r\nconst InputGroupText = styled(InputGroup.Text)`\r\n  min-width: 70px;\r\n  display: inline-block;\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin: 0 1rem 1rem 0;\r\n`;\r\n\r\nconst BlockSpan = styled.span`\r\n  display: inline-block;\r\n  margin-bottom: 1rem;\r\n`;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { updateTuning } from \"../actions/stringActions\";\r\n\r\nconst TuningOptions = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { tuning } = useSelector((state) => state.string);\r\n\r\n  const updateStringTuning = (tuning) => {\r\n    dispatch(updateTuning(tuning));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h5>Tuning</h5>\r\n\r\n      <StyledButton\r\n        variant={tuning === \"C Major\" ? \"primary\" : \"secondary\"}\r\n        onClick={() => updateStringTuning(\"C Major\")}\r\n      >\r\n        C Major\r\n      </StyledButton>\r\n\r\n      <StyledButton\r\n        variant={tuning === \"E Flat Major\" ? \"primary\" : \"secondary\"}\r\n        onClick={() => updateStringTuning(\"E Flat Major\")}\r\n      >\r\n        E &#9837; Major\r\n      </StyledButton>\r\n\r\n      <StyledButton\r\n        variant={tuning === \"A Flat Major\" ? \"primary\" : \"secondary\"}\r\n        onClick={() => updateStringTuning(\"A Flat Major\")}\r\n      >\r\n        A &#9837; Major\r\n      </StyledButton>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TuningOptions;\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-right: 1rem;\r\n  margin-bottom: 0.5rem;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { Button, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { updateStringMaterialDensity } from '../actions/stringActions';\r\n\r\nconst StringMaterialOptions = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { materialDensity } = useSelector((state) => state.string);\r\n\r\n  const [density, setDensity] = useState(materialDensity);\r\n\r\n  const updateMaterial = (density) => {\r\n    dispatch(updateStringMaterialDensity(density));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h5>\r\n        <OverlayTrigger\r\n          placement='right'\r\n          overlay={<Tooltip>This setting applies to all strings</Tooltip>}\r\n        >\r\n          <span>String Material (global)</span>\r\n        </OverlayTrigger>\r\n      </h5>\r\n\r\n      <StyledButton\r\n        variant={density === 1.14 ? 'primary' : materialDensity === 1.14 ? 'dark' : 'secondary'}\r\n        onClick={() => setDensity(1.14)}\r\n      >\r\n        Nylon\r\n      </StyledButton>\r\n\r\n      <StyledButton\r\n        variant={density === 8.77 ? 'primary' : materialDensity === 8.77 ? 'dark' : 'secondary'}\r\n        onClick={() => setDensity(8.77)}\r\n      >\r\n        Brass\r\n      </StyledButton>\r\n\r\n      <StyledButton\r\n        variant={density === 7.8 ? 'primary' : materialDensity === 7.8 ? 'dark' : 'secondary'}\r\n        onClick={() => setDensity(7.8)}\r\n      >\r\n        Steel\r\n      </StyledButton>\r\n\r\n      <StyledButton\r\n        variant={density === 8.94 ? 'primary' : materialDensity === 8.94 ? 'dark' : 'secondary'}\r\n        onClick={() => setDensity(8.94)}\r\n      >\r\n        Copper\r\n      </StyledButton>\r\n\r\n      <StyledButton\r\n        variant={density === 8.85 ? 'primary' : materialDensity === 8.85 ? 'dark' : 'secondary'}\r\n        onClick={() => setDensity(8.85)}\r\n      >\r\n        Phosphor Bronze\r\n      </StyledButton>\r\n\r\n      <ApplyButton\r\n        className='btn-sm mt-2'\r\n        variant='secondary'\r\n        onClick={() => updateMaterial(density)}\r\n        disabled={materialDensity === density}\r\n      >\r\n        Apply\r\n      </ApplyButton>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StringMaterialOptions;\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-right: 1rem;\r\n  margin-bottom: 0.5rem;\r\n`;\r\n\r\nconst ApplyButton = styled(Button)`\r\n  display: block;\r\n`;\r\n","export const stringGaugeData = [\r\n  {\r\n    name: 'd’Addario PB020 0.51mm',\r\n    diameter: 0.51,\r\n    linearMassDensity: 0.00145,\r\n  },\r\n  {\r\n    name: 'd’Addario PB021 0.53mm',\r\n    diameter: 0.53,\r\n    linearMassDensity: 0.0016,\r\n  },\r\n  {\r\n    name: 'd’Addario PB022 0.56mm',\r\n    diameter: 0.56,\r\n    linearMassDensity: 0.00176,\r\n  },\r\n  {\r\n    name: 'd’Addario PB023 0.58mm',\r\n    diameter: 0.58,\r\n    linearMassDensity: 0.00193,\r\n  },\r\n  {\r\n    name: 'd’Addario PB024 0.61mm',\r\n    diameter: 0.61,\r\n    linearMassDensity: 0.00209,\r\n  },\r\n  {\r\n    name: 'd’Addario PB025 0.64mm',\r\n    diameter: 0.64,\r\n    linearMassDensity: 0.00227,\r\n  },\r\n  {\r\n    name: 'd’Addario PB026 0.66mm',\r\n    diameter: 0.66,\r\n    linearMassDensity: 0.00244,\r\n  },\r\n  {\r\n    name: 'd’Addario PB027 0.69mm',\r\n    diameter: 0.69,\r\n    linearMassDensity: 0.00265,\r\n  },\r\n  {\r\n    name: 'd’Addario PB029 0.74mm',\r\n    diameter: 0.74,\r\n    linearMassDensity: 0.0031,\r\n  },\r\n  {\r\n    name: 'd’Addario PB030 0.76mm',\r\n    diameter: 0.76,\r\n    linearMassDensity: 0.00333,\r\n  },\r\n  {\r\n    name: 'd’Addario PB032 0.81mm',\r\n    diameter: 0.81,\r\n    linearMassDensity: 0.00375,\r\n  },\r\n  {\r\n    name: 'd’Addario PB034 0.86mm',\r\n    diameter: 0.86,\r\n    linearMassDensity: 0.00427,\r\n  },\r\n  {\r\n    name: 'd’Addario PB035 0.89mm',\r\n    diameter: 0.89,\r\n    linearMassDensity: 0.00453,\r\n  },\r\n  {\r\n    name: 'd’Addario PB036 0.91mm',\r\n    diameter: 0.91,\r\n    linearMassDensity: 0.00479,\r\n  },\r\n  {\r\n    name: 'd’Addario PB039 0.99mm',\r\n    diameter: 0.99,\r\n    linearMassDensity: 0.00556,\r\n  },\r\n  {\r\n    name: 'd’Addario PB042 1.07mm',\r\n    diameter: 1.07,\r\n    linearMassDensity: 0.00656,\r\n  },\r\n  {\r\n    name: 'd’Addario PB045 1.14mm',\r\n    diameter: 1.14,\r\n    linearMassDensity: 0.00746,\r\n  },\r\n  {\r\n    name: 'd’Addario PB047 1.19mm',\r\n    diameter: 1.19,\r\n    linearMassDensity: 0.00809,\r\n  },\r\n  {\r\n    name: 'd’Addario PB049 1.24mm',\r\n    diameter: 1.24,\r\n    linearMassDensity: 0.00878,\r\n  },\r\n  {\r\n    name: 'd’Addario PB052 1.32mm',\r\n    diameter: 1.32,\r\n    linearMassDensity: 0.00986,\r\n  },\r\n  {\r\n    name: 'd’Addario PB053 1.35mm',\r\n    diameter: 1.35,\r\n    linearMassDensity: 0.01017,\r\n  },\r\n  {\r\n    name: 'd’Addario PB056 1.42mm',\r\n    diameter: 1.42,\r\n    linearMassDensity: 0.01134,\r\n  },\r\n  {\r\n    name: 'd’Addario PB059 1.50mm',\r\n    diameter: 1.5,\r\n    linearMassDensity: 0.0126,\r\n  },\r\n  {\r\n    name: 'd’Addario PB060 1.52mm',\r\n    diameter: 1.52,\r\n    linearMassDensity: 0.01304,\r\n  },\r\n  {\r\n    name: 'd’Addario PB062 1.57mm',\r\n    diameter: 1.57,\r\n    linearMassDensity: 0.01387,\r\n  },\r\n  {\r\n    name: 'd’Addario PB064 1.63mm',\r\n    diameter: 1.63,\r\n    linearMassDensity: 0.01478,\r\n  },\r\n  {\r\n    name: 'd’Addario PB066 1.68mm',\r\n    diameter: 1.68,\r\n    linearMassDensity: 0.01566,\r\n  },\r\n  {\r\n    name: 'd’Addario PB070 1.78mm',\r\n    diameter: 1.78,\r\n    linearMassDensity: 0.01729,\r\n  },\r\n];\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Form, InputGroup, Button } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport { updateString } from '../actions/stringActions';\r\nimport { calculateTension, calculateFrequency, calculateLength, calculateDiameter } from '../utils';\r\nimport { stringGaugeData } from '../stringGaugeData';\r\n\r\nconst StringOptions = () => {\r\n  const dispatch = useDispatch();\r\n  const { selectedString } = useSelector((state) => state.string);\r\n\r\n  const [frequency, setFrequency] = useState(0);\r\n  const [length, setLength] = useState(0);\r\n  const [diameter, setDiameter] = useState(0);\r\n  const [tension, setTension] = useState(0);\r\n  const [material, setMaterial] = useState(0);\r\n  const [lmd, setLmd] = useState(0);\r\n  const [stringGauge, setStringGauge] = useState(0.00145);\r\n  const [selectedField, setSelectField] = useState('tension');\r\n\r\n  useEffect(() => {\r\n    if (selectedString) {\r\n      setFrequency(selectedString.frequency);\r\n      setLength(selectedString.length);\r\n      setDiameter(selectedString.diameter);\r\n      setTension(selectedString.tension);\r\n      setMaterial(selectedString.materialDensity);\r\n      setLmd(selectedString.linearMassDensity);\r\n    }\r\n  }, [selectedString]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let newFrequency = parseFloat(frequency),\r\n      newLength = parseFloat(length),\r\n      newDiameter = parseFloat(diameter),\r\n      newTension = parseFloat(tension);\r\n\r\n    switch (selectedField) {\r\n      case 'frequency':\r\n        newFrequency = calculateFrequency(\r\n          length / 1000,\r\n          tension,\r\n          diameter / 1000,\r\n          material,\r\n          material === 0 ? lmd : material === -1 ? stringGauge : 0\r\n        );\r\n        break;\r\n      case 'length':\r\n        newLength =\r\n          calculateLength(\r\n            frequency,\r\n            tension,\r\n            diameter / 1000,\r\n            material,\r\n            material === 0 ? lmd : material === -1 ? stringGauge : 0\r\n          ) * 1000;\r\n        break;\r\n      case 'diameter':\r\n        newDiameter = calculateDiameter(frequency, length / 1000, tension, material) * 1000;\r\n        break;\r\n      case 'tension':\r\n        newTension = calculateTension(\r\n          frequency,\r\n          length / 1000,\r\n          diameter / 1000,\r\n          material,\r\n          material === 0 ? lmd : material === -1 ? stringGauge : 0\r\n        );\r\n        break;\r\n      default:\r\n    }\r\n\r\n    let params = {\r\n      frequency: newFrequency,\r\n      length: newLength,\r\n      diameter: newDiameter,\r\n      tension: newTension,\r\n      materialDensity: material,\r\n    };\r\n\r\n    if (material === 0) params = { ...params, linearMassDensity: parseFloat(lmd) };\r\n    if (material === -1) params = { ...params, linearMassDensity: stringGauge };\r\n\r\n    dispatch(updateString(selectedString.id, params));\r\n  };\r\n\r\n  if (!selectedString) return null;\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <h5>String ({selectedString.note})</h5>\r\n\r\n      <Form.Group className='mb-1'>\r\n        <Form.Label>Frequency</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type='number'\r\n            value={frequency}\r\n            onChange={(e) => setFrequency(e.target.value)}\r\n            disabled={selectedField === 'frequency'}\r\n          />\r\n          <InputGroupText>Hz</InputGroupText>\r\n          <RadioContainer>\r\n            <Form.Check\r\n              type='radio'\r\n              checked={selectedField === 'frequency'}\r\n              onChange={() => setSelectField('frequency')}\r\n              name='stringinput'\r\n            />\r\n          </RadioContainer>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      <Form.Group className='mb-1'>\r\n        <Form.Label>Length</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type='number'\r\n            value={length}\r\n            onChange={(e) => setLength(e.target.value)}\r\n            disabled={selectedField === 'length'}\r\n          />\r\n          <InputGroupText>mm</InputGroupText>\r\n          <RadioContainer>\r\n            <Form.Check\r\n              type='radio'\r\n              checked={selectedField === 'length'}\r\n              onChange={() => setSelectField('length')}\r\n              name='stringinput'\r\n            />\r\n          </RadioContainer>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {material > 0 && (\r\n        <Form.Group className='mb-1'>\r\n          <Form.Label>Diameter</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type='number'\r\n              value={diameter}\r\n              onChange={(e) => setDiameter(e.target.value)}\r\n              disabled={selectedField === 'diameter'}\r\n            />\r\n            <InputGroupText>mm</InputGroupText>\r\n            <RadioContainer>\r\n              <Form.Check\r\n                type='radio'\r\n                checked={selectedField === 'diameter'}\r\n                onChange={() => setSelectField('diameter')}\r\n                name='stringinput'\r\n              />\r\n            </RadioContainer>\r\n          </InputGroup>\r\n        </Form.Group>\r\n      )}\r\n\r\n      <Form.Group className='mb-1'>\r\n        <Form.Label>Tension</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type='number'\r\n            value={tension}\r\n            onChange={(e) => setTension(e.target.value)}\r\n            disabled={selectedField === 'tension'}\r\n          />\r\n          <InputGroupText>kg</InputGroupText>\r\n          <RadioContainer>\r\n            <Form.Check\r\n              type='radio'\r\n              checked={selectedField === 'tension'}\r\n              onChange={() => setSelectField('tension')}\r\n              name='stringinput'\r\n            />\r\n          </RadioContainer>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      <Form.Group className={material === 0 || material === -1 ? 'mb-1' : 'mb-3'}>\r\n        <Form.Label>Material</Form.Label>\r\n        <Form.Select\r\n          value={material}\r\n          onChange={(e) => {\r\n            if (\r\n              (e.target.value === '0' || e.target.value === '-1') &&\r\n              selectedField === 'diameter'\r\n            ) {\r\n              setSelectField('tension');\r\n            }\r\n            setMaterial(parseFloat(e.target.value));\r\n          }}\r\n        >\r\n          <option value={1.14}>Nylon</option>\r\n          <option value={8.77}>Brass</option>\r\n          <option value={7.8}>Steel</option>\r\n          <option value={8.94}>Copper</option>\r\n          <option value={8.85}>Phosphor Bronze</option>\r\n          <option value={-1}>Phosphor Bronze Wound</option>\r\n          <option value={0}>Other</option>\r\n        </Form.Select>\r\n      </Form.Group>\r\n\r\n      {material === -1 && (\r\n        <Form.Group className='mb-3'>\r\n          <Form.Label>String Gauge</Form.Label>\r\n          <Form.Select\r\n            value={stringGauge}\r\n            onChange={(e) => {\r\n              setStringGauge(parseFloat(e.target.value));\r\n            }}\r\n          >\r\n            {stringGaugeData.map((gauge) => {\r\n              return (\r\n                <option key={gauge.diameter} value={gauge.linearMassDensity}>\r\n                  {gauge.name}\r\n                </option>\r\n              );\r\n            })}\r\n          </Form.Select>\r\n        </Form.Group>\r\n      )}\r\n\r\n      {material === 0 && (\r\n        <Form.Group className='mb-3'>\r\n          <Form.Label>Linear Mass Density (mass/length)</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control type='number' value={lmd} onChange={(e) => setLmd(e.target.value)} />\r\n            <InputGroupText>kg/m</InputGroupText>\r\n          </InputGroup>\r\n        </Form.Group>\r\n      )}\r\n\r\n      <Button\r\n        className='btn-sm'\r\n        type='submit'\r\n        variant='secondary'\r\n        disabled={\r\n          !(\r\n            (frequency || selectedField === 'frequency') &&\r\n            (length || selectedField === 'length') &&\r\n            (diameter || selectedField === 'diameter') &&\r\n            (tension || selectedField === 'tension')\r\n          )\r\n        }\r\n      >\r\n        Apply\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default StringOptions;\r\n\r\nconst InputGroupText = styled(InputGroup.Text)`\r\n  min-width: 70px;\r\n  display: inline-block;\r\n  text-align: center;\r\n`;\r\n\r\nconst RadioContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0 10px;\r\n`;\r\n","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport Overview from './Overview';\r\nimport SoundboardOptions from './SoundboardOptions';\r\nimport PillarOptions from './PillarOptions';\r\nimport NeckOptions from './NeckOptions';\r\nimport TuningOptions from './TuningOptions';\r\nimport StringMaterialOptions from './StringMaterialOptions';\r\nimport StringOptions from './StringOptions';\r\n\r\nconst OptionsPanel = () => {\r\n  return (\r\n    <MainContainer>\r\n      <OptionsContainer>\r\n        <Overview />\r\n      </OptionsContainer>\r\n\r\n      <OptionsContainer>\r\n        <NeckOptions />\r\n      </OptionsContainer>\r\n\r\n      <OptionsContainer>\r\n        <SoundboardOptions />\r\n      </OptionsContainer>\r\n\r\n      <OptionsContainer>\r\n        <PillarOptions />\r\n      </OptionsContainer>\r\n\r\n      <OptionsContainer>\r\n        <StringMaterialOptions />\r\n      </OptionsContainer>\r\n\r\n      <OptionsContainer>\r\n        <TuningOptions />\r\n      </OptionsContainer>\r\n\r\n      <OptionsContainer>\r\n        <StringOptions />\r\n      </OptionsContainer>\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nexport default OptionsPanel;\r\n\r\nconst MainContainer = styled(Container)`\r\n  max-height: 90vh;\r\n  overflow: auto;\r\n`;\r\n\r\nconst OptionsContainer = styled.div`\r\n  margin-bottom: 1.3rem;\r\n`;\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport { Shape, Circle } from 'react-konva';\r\nimport { updateControlPosition, updateSoundboardLength } from '../actions/soundboardActions';\r\n\r\nconst Body = ({ start, end, dispatch }) => {\r\n  const control = useRef(null);\r\n  const [cachedEnd, setCachedEnd] = useState(end);\r\n\r\n  useEffect(() => {\r\n    dispatch(updateControlPosition({ x: control.current.x(), y: control.current.y() }));\r\n  }, [control, dispatch]);\r\n\r\n  useEffect(() => {\r\n    const length = Math.sqrt((end.x - start.x) ** 2 + (end.y - start.y) ** 2) * 0.4;\r\n    dispatch(updateSoundboardLength(length));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (end.y !== cachedEnd.y) {\r\n      const length = Math.sqrt((end.x - start.x) ** 2 + (end.y - start.y) ** 2) * 0.4;\r\n      dispatch(updateSoundboardLength(length));\r\n\r\n      dispatch(\r\n        updateControlPosition({\r\n          x: control.current.x(),\r\n          y: control.current.y(),\r\n        })\r\n      );\r\n\r\n      setCachedEnd(end);\r\n    }\r\n  }, [control, dispatch, end]);\r\n\r\n  return (\r\n    <>\r\n      <Shape\r\n        stroke='black'\r\n        strokeWidth={5}\r\n        lineJoin='round'\r\n        sceneFunc={(context, shape) => {\r\n          context.beginPath();\r\n          context.moveTo(start.x, start.y);\r\n          context.quadraticCurveTo(control.current?.x(), control.current?.y(), end.x, end.y);\r\n          context.lineTo(end.x, end.y + 30);\r\n          context.lineTo(start.x + 100, start.y);\r\n          context.closePath();\r\n          context.fillStrokeShape(shape);\r\n        }}\r\n      />\r\n\r\n      <Circle\r\n        ref={control}\r\n        x={(start.x + end.x) / 2}\r\n        y={(start.y + end.y) / 2}\r\n        radius={20}\r\n        stroke='#666'\r\n        fill='#ddd'\r\n        strokeWidth={2}\r\n        draggable\r\n        onMouseEnter={function () {\r\n          document.body.style.cursor = 'pointer';\r\n          this.strokeWidth(4);\r\n        }}\r\n        onMouseLeave={function () {\r\n          document.body.style.cursor = 'default';\r\n          this.strokeWidth(2);\r\n        }}\r\n        onDragMove={function () {\r\n          this.x((start.x + end.x) / 2);\r\n        }}\r\n        onDragEnd={function () {\r\n          dispatch(\r\n            updateControlPosition({\r\n              x: this.x(),\r\n              y: this.y(),\r\n            })\r\n          );\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Line, Shape } from 'react-konva';\r\n\r\nconst Pillar = ({ start, end, dStart, dEnd, width = 30 }) => {\r\n  const { shape } = useSelector((state) => state.pillar);\r\n\r\n  if (shape === 'D Shape') {\r\n    return (\r\n      <Shape\r\n        stroke='black'\r\n        strokeWidth={5}\r\n        lineCap='round'\r\n        sceneFunc={(context, shape) => {\r\n          context.beginPath();\r\n          context.moveTo(start.x, start.y);\r\n          context.quadraticCurveTo(\r\n            (start.x + end.x) / 2 - 100,\r\n            (start.y + end.y) / 2,\r\n            end.x,\r\n            end.y + 50\r\n          );\r\n          context.moveTo(dStart.x, dStart.y);\r\n          context.quadraticCurveTo(\r\n            (dStart.x + dEnd.x) / 2 - 100,\r\n            (dStart.y + dEnd.y) / 2,\r\n            dEnd.x,\r\n            dEnd.y + 15\r\n          );\r\n          context.fillStrokeShape(shape);\r\n        }}\r\n        className='Pillar'\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Line\r\n      x={0}\r\n      y={0}\r\n      points={[start.x, start.y, end.x, end.y, end.x - width, end.y, start.x - width, start.y]}\r\n      stroke='black'\r\n      strokeWidth={5}\r\n      closed\r\n      lineJoin='round'\r\n      lineCap='round'\r\n      className='Pillar'\r\n    />\r\n  );\r\n};\r\n\r\nexport default Pillar;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Line } from 'react-konva';\r\nimport { stringX, stringY, getQBezierValue } from '../utils';\r\n\r\nconst Neck = ({ start, end, yOffset, harpHeight }) => {\r\n  const { strings, defaultStringLengths, stringSpacing, stringNumber } = useSelector(\r\n    (state) => state.string\r\n  );\r\n  const { control } = useSelector((state) => state.soundboard);\r\n  const { shape } = useSelector((state) => state.pillar);\r\n\r\n  return (\r\n    <>\r\n      {control && (\r\n        <>\r\n          <Line\r\n            x={0}\r\n            y={0}\r\n            tension={0.3}\r\n            points={[\r\n              start.x,\r\n              shape === 'Straight' ? start.y : start.y + 50,\r\n              ...topNeckPoints(\r\n                strings,\r\n                defaultStringLengths,\r\n                stringY(-4, yOffset, harpHeight),\r\n                control.y,\r\n                end.y,\r\n                stringSpacing,\r\n                -40,\r\n                stringNumber\r\n              ),\r\n              end.x,\r\n              end.y - 30,\r\n              end.x + 20,\r\n              end.y,\r\n              end.x,\r\n              end.y + 30,\r\n              end.x,\r\n              end.y,\r\n              ...bottomNeckPoints(\r\n                strings,\r\n                defaultStringLengths,\r\n                stringY(-4, yOffset, harpHeight),\r\n                control.y,\r\n                end.y,\r\n                stringSpacing,\r\n                10,\r\n                stringNumber\r\n              ),\r\n              start.x,\r\n              start.y + 50,\r\n            ]}\r\n            stroke='black'\r\n            strokeWidth={5}\r\n            lineCap='round'\r\n            className='Neck'\r\n          />\r\n\r\n          {/* {strings.map((string, index) => {\r\n            const points = neckPoints(\r\n              strings.map((string) => string.length),\r\n              stringY(-4, yOffset),\r\n              control.y,\r\n              end.y,\r\n              stringSpacing,\r\n              10\r\n            );\r\n\r\n            if (string.length - defaultStringLengths[index] > 50) {\r\n              return (\r\n                <Shape\r\n                  key={string.id}\r\n                  stroke='black'\r\n                  strokeWidth={3}\r\n                  lineCap='round'\r\n                  sceneFunc={(context, shape) => {\r\n                    context.beginPath();\r\n                    context.moveTo(points[index - 1][0], points[index - 1][1]);\r\n                    context.lineTo(points[index][0], points[index][1]);\r\n                    context.moveTo(points[index + 1][0], points[index + 1][1]);\r\n                    context.fillStrokeShape(shape);\r\n                  }}\r\n                />\r\n              );\r\n            }\r\n\r\n            if (string.length - defaultStringLengths[index] < -10) {\r\n              return (\r\n                <Shape\r\n                  key={string.id}\r\n                  stroke='black'\r\n                  strokeWidth={3}\r\n                  lineCap='round'\r\n                  lineJoin='round'\r\n                  sceneFunc={(context, shape) => {\r\n                    context.beginPath();\r\n                    context.moveTo(\r\n                      index !== 0 ? points[index - 1][0] : points[index + 1][0] - 20,\r\n                      index !== 0 ? points[index - 1][1] : points[index + 1][1]\r\n                    );\r\n                    context.lineTo(points[index][0] - 5, points[index][1]);\r\n                    context.lineTo(points[index][0] + 5, points[index][1]);\r\n                    context.lineTo(\r\n                      index !== defaultStringLengths.length - 1\r\n                        ? points[index + 1][0]\r\n                        : points[index - 1][0] + 20,\r\n                      index !== defaultStringLengths.length - 1\r\n                        ? points[index + 1][1]\r\n                        : points[index - 1][1]\r\n                    );\r\n                    context.fillStrokeShape(shape);\r\n                  }}\r\n                />\r\n              );\r\n            }\r\n\r\n            return null;\r\n          })} */}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Neck;\r\n\r\nconst neckPoints = (stringLengths, start, control, end, stringSpacing, offset, stringNumber) => {\r\n  const points = stringLengths.map((length, index) => {\r\n    const yPos = getQBezierValue((index + 4) / (stringNumber + 7), start, control, end);\r\n    return [stringX(index, stringSpacing), yPos - length * 0.4 + offset];\r\n  });\r\n\r\n  return points;\r\n};\r\n\r\n// const samplePoints = (stringLengths, start, control, end, stringSpacing, offset) => {\r\n//   const points = neckPoints(stringLengths, start, control, end, stringSpacing, offset);\r\n//   const samples = [];\r\n\r\n//   points.forEach((point, index) => {\r\n//     if (index % 6 === 0) {\r\n//       samples.push(point);\r\n//     }\r\n//   });\r\n\r\n//   return samples.flat();\r\n// };\r\n\r\nconst bottomNeckPoints = (\r\n  strings,\r\n  stringLengths,\r\n  start,\r\n  control,\r\n  end,\r\n  stringSpacing,\r\n  offset,\r\n  stringNumber\r\n) => {\r\n  const points = neckPoints(\r\n    strings.map((string) => string.length),\r\n    start,\r\n    control,\r\n    end,\r\n    stringSpacing,\r\n    offset,\r\n    stringNumber\r\n  );\r\n  const defaultPoints = neckPoints(\r\n    stringLengths,\r\n    start,\r\n    control,\r\n    end,\r\n    stringSpacing,\r\n    offset,\r\n    stringNumber\r\n  );\r\n  const samples = [];\r\n\r\n  points.forEach((point, index) => {\r\n    const lengthDifference = strings[index].length - stringLengths[index];\r\n    if (index % 6 === 0 && lengthDifference > -10) {\r\n      samples.push(defaultPoints[index]);\r\n    } else if (index % 6 === 0 || lengthDifference < -10) {\r\n      samples.push(point);\r\n    }\r\n  });\r\n\r\n  return samples.reverse().flat();\r\n};\r\n\r\nconst topNeckPoints = (\r\n  strings,\r\n  stringLengths,\r\n  start,\r\n  control,\r\n  end,\r\n  stringSpacing,\r\n  offset,\r\n  stringNumber\r\n) => {\r\n  const points = neckPoints(\r\n    strings.map((string) => string.length),\r\n    start,\r\n    control,\r\n    end,\r\n    stringSpacing,\r\n    offset,\r\n    stringNumber\r\n  );\r\n  const defaultPoints = neckPoints(\r\n    stringLengths,\r\n    start,\r\n    control,\r\n    end,\r\n    stringSpacing,\r\n    offset,\r\n    stringNumber\r\n  );\r\n  const samples = [];\r\n\r\n  points.forEach((point, index) => {\r\n    const lengthDifference = strings[index].length - stringLengths[index];\r\n    if (index % 6 === 0 && lengthDifference < 50) {\r\n      samples.push(defaultPoints[index]);\r\n    } else if (index % 6 === 0 || lengthDifference > 50) {\r\n      samples.push(point);\r\n    }\r\n  });\r\n\r\n  return samples.flat();\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Shape, Circle } from 'react-konva';\r\n\r\nconst String = ({ start, end, string, stroke = 'white' }) => {\r\n  const { backgroundColor } = useSelector((state) => state.settings);\r\n\r\n  return (\r\n    <>\r\n      <Shape\r\n        stroke={backgroundColor === 'white' && stroke === 'white' ? 'silver' : stroke}\r\n        strokeWidth={3}\r\n        lineCap='round'\r\n        string={string}\r\n        sceneFunc={(context, shape) => {\r\n          context.beginPath();\r\n          context.moveTo(start.x, start.y);\r\n          context.lineTo(end.x, end.y - 20);\r\n          context.fillStrokeShape(shape);\r\n        }}\r\n      />\r\n      <Circle x={end.x} y={end.y || 0} stroke='gray' radius={2} listening={false} />\r\n      <Circle x={end.x} y={end.y - 20 || 0} stroke='gray' radius={3} listening={false} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default String;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Arrow, Label, Tag, Text } from 'react-konva';\r\nimport { stringX, stringY } from '../utils';\r\n\r\nconst Measurements = ({ yOffset, width, height }) => {\r\n  const { stringSpacing, stringNumber } = useSelector((state) => state.string);\r\n\r\n  return (\r\n    <>\r\n      <Arrow\r\n        points={[\r\n          stringX(-4, stringSpacing) - 90,\r\n          height / 2 - 10,\r\n          stringX(-4, stringSpacing) - 90,\r\n          stringY(-4, yOffset, height) - height,\r\n        ]}\r\n        stroke='blue'\r\n      />\r\n\r\n      <Arrow\r\n        points={[\r\n          stringX(-4, stringSpacing) - 90,\r\n          height / 2 + 40,\r\n          stringX(-4, stringSpacing) - 90,\r\n          stringY(-4, yOffset, height),\r\n        ]}\r\n        stroke='blue'\r\n      />\r\n\r\n      <Label x={stringX(-4, stringSpacing) - 90} y={height / 2} listening={false}>\r\n        <Tag\r\n          fill='black'\r\n          pointerDirection='up'\r\n          pointerWidth={0}\r\n          pointerHeight={0}\r\n          lineJoin='round'\r\n        />\r\n        <Text\r\n          text={Math.round((height / 0.4) * 100) / 100 + ' mm'}\r\n          fontSize={18}\r\n          padding={5}\r\n          fill='white'\r\n        />\r\n      </Label>\r\n\r\n      <Arrow\r\n        points={[\r\n          stringX(-4, stringSpacing) +\r\n            (stringX(stringNumber + 3, stringSpacing) - stringX(-4, stringSpacing)) / 2 +\r\n            10,\r\n          stringY(-4, yOffset, height) - height - 30,\r\n          stringX(stringNumber + 3, stringSpacing) + 20,\r\n          stringY(-4, yOffset, height) - height - 30,\r\n        ]}\r\n        stroke='blue'\r\n      />\r\n\r\n      <Arrow\r\n        points={[\r\n          stringX(-4, stringSpacing) +\r\n            (stringX(stringNumber + 3, stringSpacing) - stringX(-4, stringSpacing)) / 2 -\r\n            100,\r\n          stringY(-4, yOffset, height) - height - 30,\r\n          stringX(-4, stringSpacing) - 30,\r\n          stringY(-4, yOffset, height) - height - 30,\r\n        ]}\r\n        stroke='blue'\r\n      />\r\n\r\n      <Label\r\n        x={\r\n          stringX(-4, stringSpacing) +\r\n          (stringX(stringNumber + 3, stringSpacing) - stringX(-4, stringSpacing)) / 2\r\n        }\r\n        y={stringY(-4, yOffset, height) - height - 30}\r\n        listening={false}\r\n      >\r\n        <Tag\r\n          fill='black'\r\n          pointerDirection='right'\r\n          pointerWidth={0}\r\n          pointerHeight={0}\r\n          lineJoin='round'\r\n        />\r\n        <Text\r\n          text={Math.round((width / 0.4) * 100) / 100 + ' mm'}\r\n          fontSize={18}\r\n          padding={5}\r\n          fill='white'\r\n        />\r\n      </Label>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Measurements;\r\n","import React, { useState, useEffect, useRef, useMemo } from 'react';\r\nimport { useDispatch, useSelector, Provider } from 'react-redux';\r\nimport { Stage, Layer, Label, Tag, Text } from 'react-konva';\r\nimport Body from './Body';\r\nimport Pillar from './Pillar';\r\nimport Neck from './Neck';\r\nimport String from './String';\r\nimport Measurements from './Measurements';\r\nimport { selectString, updateYOffset } from '../actions/stringActions';\r\nimport {\r\n  stringX,\r\n  stringY,\r\n  getQBezierValue,\r\n  calculateTensileStress,\r\n  calculateStraightPillarCrossSectionArea,\r\n  calculateDPillarCrossSectionArea,\r\n  calculateYOffset,\r\n} from '../utils';\r\nimport store from '../store';\r\n\r\nconst Harp = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { strings, defaultStringLengths, stringSpacing, stringNumber, totalLoad, yOffset } =\r\n    useSelector((state) => state.string);\r\n  const { angle, control, stringBandThickness, length } = useSelector((state) => state.soundboard);\r\n  const { neckJointWidth, shape, pillarDiameter, pillarWidth, pillarThickness } = useSelector(\r\n    (state) => state.pillar\r\n  );\r\n  const {\r\n    neckStyle,\r\n    neckThickness,\r\n    tuningPinLength,\r\n    frontNeckThickness,\r\n    backNeckThickness,\r\n    frontNeckTuningPostLength,\r\n    backNeckTuningPostLength,\r\n  } = useSelector((state) => state.neck);\r\n\r\n  const [width, setWidth] = useState(\r\n    stringX(stringNumber + 3, stringSpacing) + 20 - (stringX(-4, stringSpacing) - 30)\r\n  );\r\n  const [height, setHeight] = useState(1214.57 * 0.48);\r\n\r\n  const tooltip = useRef(null);\r\n\r\n  const frontNeckLoad = useMemo(() => {\r\n    let load = 0;\r\n    [...strings].reverse().forEach((string, index) => {\r\n      if (index % 2 === 0) load += string.tension;\r\n    });\r\n\r\n    return load;\r\n  }, [strings]);\r\n\r\n  const backNeckLoad = useMemo(() => {\r\n    let load = 0;\r\n    [...strings].reverse().forEach((string, index) => {\r\n      if (index % 2 === 1) load += string.tension;\r\n    });\r\n\r\n    return load;\r\n  }, [strings]);\r\n\r\n  const torqueImbalance = useMemo(() => {\r\n    const imbalance =\r\n      (frontNeckTuningPostLength / 1000) * frontNeckLoad * 9.807 -\r\n      (backNeckTuningPostLength / 1000) * backNeckLoad * 9.807;\r\n\r\n    return imbalance;\r\n  }, [frontNeckTuningPostLength, backNeckTuningPostLength, frontNeckLoad, backNeckLoad]);\r\n\r\n  useEffect(() => {\r\n    dispatch(updateYOffset(calculateYOffset(angle, stringSpacing)));\r\n  }, [angle, stringSpacing, dispatch]);\r\n\r\n  useEffect(() => {\r\n    setWidth(stringX(stringNumber + 3, stringSpacing) + 20 - (stringX(-4, stringSpacing) - 30));\r\n  }, [stringNumber, stringSpacing]);\r\n\r\n  useEffect(() => {\r\n    let yPos = 0;\r\n\r\n    strings.forEach((string, index) => {\r\n      const yPosAtSoundboard = getQBezierValue(\r\n        (index + 4) / (stringNumber + 7),\r\n        stringY(-4, yOffset, height),\r\n        control?.y,\r\n        stringY(stringNumber + 3, yOffset, height)\r\n      );\r\n\r\n      const stringHeight =\r\n        stringY(-4, yOffset, height) - yPosAtSoundboard + string.length * 0.4 + 40;\r\n      if (stringHeight > yPos) yPos = stringHeight;\r\n    });\r\n\r\n    setHeight(yPos > defaultStringLengths[0] * 0.48 ? yPos : defaultStringLengths[0] * 0.48);\r\n  }, [defaultStringLengths, control, stringNumber, strings, yOffset]);\r\n\r\n  return (\r\n    <Stage width={width + 200} height={height + 100}>\r\n      <Provider store={store}>\r\n        <Layer\r\n          onClick={(e) => {\r\n            tooltip.current.position({\r\n              x: e.evt.layerX,\r\n              y: e.evt.layerY - 5,\r\n            });\r\n            if (e.target.attrs.className === 'Neck') {\r\n              if (neckStyle === 'Standard') {\r\n                tooltip.current\r\n                  .getText()\r\n                  .text(\r\n                    `Neck\\n\\nNeck Style: ${neckStyle}\\nTensile Stress: ${(\r\n                      calculateTensileStress(\r\n                        (stringX(stringNumber + 3, stringSpacing) +\r\n                          20 -\r\n                          (stringX(-4, stringSpacing) - 30)) /\r\n                          0.4 /\r\n                          1000,\r\n                        neckThickness / 1000,\r\n                        totalLoad * 9.807\r\n                      ) / 1000000\r\n                    ).toFixed(6)} MPa\\nTorque: ${(\r\n                      (tuningPinLength / 1000) *\r\n                      totalLoad *\r\n                      9.807\r\n                    ).toFixed(\r\n                      6\r\n                    )} N m\\nNeck Thickness: ${neckThickness} mm\\nTuning Pin Length: ${tuningPinLength} mm`\r\n                  );\r\n              } else {\r\n                tooltip.current\r\n                  .getText()\r\n                  .text(\r\n                    `Neck\\n\\nNeck Style: ${neckStyle}\\nTorque Imbalance: ${torqueImbalance.toFixed(\r\n                      6\r\n                    )} N m\\n\\nFront Neck\\nTensile Stress: ${(\r\n                      calculateTensileStress(\r\n                        (stringX(stringNumber + 3, stringSpacing) +\r\n                          20 -\r\n                          (stringX(-4, stringSpacing) - 30)) /\r\n                          0.4 /\r\n                          1000,\r\n                        frontNeckThickness / 1000,\r\n                        (frontNeckLoad / 2) * 9.807\r\n                      ) / 1000000\r\n                    ).toFixed(\r\n                      6\r\n                    )} MPa\\nNeck Thickness: ${frontNeckThickness} mm\\nTuning Post Length: ${frontNeckTuningPostLength} mm\\n\\nBack Neck\\nTensile Stress: ${(\r\n                      calculateTensileStress(\r\n                        (stringX(stringNumber + 3, stringSpacing) +\r\n                          20 -\r\n                          (stringX(-4, stringSpacing) - 30)) /\r\n                          0.4 /\r\n                          1000,\r\n                        backNeckThickness / 1000,\r\n                        (backNeckLoad / 2) * 9.807\r\n                      ) / 1000000\r\n                    ).toFixed(\r\n                      6\r\n                    )} MPa\\nNeck Thickness: ${backNeckThickness} mm\\nTuning Post Length: ${backNeckTuningPostLength} mm`\r\n                  );\r\n              }\r\n            } else if (e.target.attrs.className === 'Pillar') {\r\n              if (shape === 'Straight') {\r\n                tooltip.current\r\n                  .getText()\r\n                  .text(\r\n                    `Pillar\\n\\nCompresive Stress: ${(\r\n                      (totalLoad * 0.6 * 9.807) /\r\n                      calculateStraightPillarCrossSectionArea(pillarDiameter) /\r\n                      1000000\r\n                    ).toFixed(6)} MPa\\nPillar Diameter: ${pillarDiameter} mm`\r\n                  );\r\n              } else {\r\n                tooltip.current\r\n                  .getText()\r\n                  .text(\r\n                    `Pillar\\n\\nCompresive Stress: ${(\r\n                      (totalLoad * 0.6 * 9.807) /\r\n                      calculateDPillarCrossSectionArea(pillarWidth, pillarThickness) /\r\n                      1000000\r\n                    ).toFixed(\r\n                      6\r\n                    )} MPa\\nPillar Width: ${pillarWidth} mm\\nPillar Thickness: ${pillarThickness} mm`\r\n                  );\r\n              }\r\n            }\r\n\r\n            tooltip.current.show();\r\n          }}\r\n          onMouseOver={(e) => {\r\n            document.body.style.cursor = 'pointer';\r\n            e.target.strokeWidth(7);\r\n          }}\r\n          onMouseOut={(e) => {\r\n            document.body.style.cursor = 'default';\r\n            e.target.strokeWidth(5);\r\n            tooltip.current.hide();\r\n          }}\r\n        >\r\n          <Pillar\r\n            start={{ x: stringX(-4, stringSpacing), y: stringY(-4, yOffset, height) }}\r\n            end={{\r\n              x: stringX(-4, stringSpacing),\r\n              y: stringY(-4, yOffset, height) - defaultStringLengths[0] * 0.48,\r\n            }}\r\n            dStart={{\r\n              x: stringX(-2, stringSpacing),\r\n              y: getQBezierValue(\r\n                2 / (stringNumber + 7),\r\n                stringY(-4, yOffset, height),\r\n                control?.y,\r\n                stringY(stringNumber + 3, yOffset, height)\r\n              ),\r\n            }}\r\n            dEnd={{\r\n              x: stringX(neckJointWidth, stringSpacing),\r\n              y:\r\n                getQBezierValue(\r\n                  (4 + neckJointWidth) / (stringNumber + 7),\r\n                  stringY(-4, yOffset, height),\r\n                  control?.y,\r\n                  stringY(stringNumber + 3, yOffset, height)\r\n                ) -\r\n                strings[neckJointWidth].length * 0.4,\r\n            }}\r\n          />\r\n\r\n          <Neck\r\n            start={{\r\n              x: stringX(-4, stringSpacing),\r\n              y: stringY(-4, yOffset, height) - defaultStringLengths[0] * 0.48,\r\n            }}\r\n            end={{\r\n              x: stringX(stringNumber + 3, stringSpacing),\r\n              y: stringY(stringNumber + 3, yOffset, height),\r\n            }}\r\n            yOffset={yOffset}\r\n            harpHeight={height}\r\n          />\r\n        </Layer>\r\n\r\n        <Layer\r\n          onClick={(e) => {\r\n            dispatch(selectString(e.target.attrs.string.id));\r\n          }}\r\n          onMouseOver={(e) => {\r\n            const string = e.target.attrs.string;\r\n            document.body.style.cursor = 'pointer';\r\n            e.target.strokeWidth(5);\r\n            tooltip.current\r\n              .getText()\r\n              .text(\r\n                `Frequency: ${string.frequency} Hz, Length: ${string.length} mm, Diameter: ${Number(\r\n                  string.diameter\r\n                ).toFixed(2)} mm, Tension: ${string.tension.toFixed(2)} kg`\r\n              );\r\n            tooltip.current.position({\r\n              x: e.evt.layerX,\r\n              y: e.evt.layerY - 5,\r\n            });\r\n            tooltip.current.show();\r\n          }}\r\n          onMouseOut={(e) => {\r\n            document.body.style.cursor = 'default';\r\n            e.target.strokeWidth(3);\r\n            tooltip.current.hide();\r\n          }}\r\n        >\r\n          {strings.map((string, index) => {\r\n            const yPos = getQBezierValue(\r\n              (index + 4) / (stringNumber + 7),\r\n              stringY(-4, yOffset, height),\r\n              control?.y,\r\n              stringY(stringNumber + 3, yOffset, height)\r\n            );\r\n\r\n            return (\r\n              <String\r\n                key={string.id}\r\n                start={{\r\n                  x: stringX(index, stringSpacing),\r\n                  y: yPos,\r\n                }}\r\n                end={{\r\n                  x: stringX(index, stringSpacing),\r\n                  y: yPos - string.length * 0.4,\r\n                }}\r\n                string={string}\r\n                stroke={\r\n                  string.note.charAt(0) === 'C' && string.note.length === 2\r\n                    ? 'red'\r\n                    : string.note.charAt(0) === 'F' && string.note.length === 2\r\n                    ? 'blue'\r\n                    : 'white'\r\n                }\r\n              />\r\n            );\r\n          })}\r\n        </Layer>\r\n\r\n        <Layer\r\n          onClick={(e) => {\r\n            tooltip.current.position({\r\n              x: e.evt.layerX,\r\n              y: e.evt.layerY - 5,\r\n            });\r\n            tooltip.current\r\n              .getText()\r\n              .text(\r\n                `Body\\n\\nSoundboard Angle: ${angle} degrees\\nSoundboard Tensile Stress: ${(\r\n                  calculateTensileStress(\r\n                    length / 1000,\r\n                    stringBandThickness / 1000,\r\n                    totalLoad * 0.5 * 9.807\r\n                  ) / 1000000\r\n                ).toFixed(6)} MPa\\nString Band Thickness: ${stringBandThickness} mm`\r\n              );\r\n            tooltip.current.show();\r\n          }}\r\n          onMouseOver={(e) => {\r\n            document.body.style.cursor = 'pointer';\r\n            e.target.strokeWidth(7);\r\n          }}\r\n          onMouseOut={(e) => {\r\n            document.body.style.cursor = 'default';\r\n            e.target.strokeWidth(5);\r\n            tooltip.current.hide();\r\n          }}\r\n        >\r\n          <Body\r\n            start={{ x: stringX(-4, stringSpacing), y: stringY(-4, yOffset, height) }}\r\n            end={{\r\n              x: stringX(stringNumber + 3, stringSpacing),\r\n              y: stringY(stringNumber + 3, yOffset, height),\r\n            }}\r\n            dispatch={dispatch}\r\n          />\r\n        </Layer>\r\n\r\n        <Layer>\r\n          <Measurements yOffset={yOffset} width={width} height={height} />\r\n\r\n          <Label opacity={0.8} visible={false} listening={false} ref={tooltip} offsetY={250}>\r\n            <Tag\r\n              fill='black'\r\n              pointerDirection='down'\r\n              pointerWidth={10}\r\n              pointerHeight={10}\r\n              lineJoin='round'\r\n            />\r\n            <Text text='' fontSize={18} padding={5} fill='white' />\r\n          </Label>\r\n        </Layer>\r\n      </Provider>\r\n    </Stage>\r\n  );\r\n};\r\n\r\nexport default Harp;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const updateBackgroundColor = (color) => async (dispatch) => {\r\n  dispatch(createAction('UPDATE_BACKGROUND_COLOR')({ color }));\r\n};\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Navbar, NavDropdown, Container, Row, Col } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport OptionsPanel from './components/OptionsPanel';\r\nimport Harp from './components/Harp';\r\nimport { updateBackgroundColor } from './actions/settingsActions';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n\r\n  const { backgroundColor } = useSelector((state) => state.settings);\r\n\r\n  return (\r\n    <AppContainer className='App' backgroundColor={backgroundColor}>\r\n      <Navbar className='mb-3' bg='dark' variant='dark'>\r\n        <Container>\r\n          <Navbar.Brand>Harp Designer</Navbar.Brand>\r\n          <NavDropdown title={<DropdownTitle>Background Color</DropdownTitle>}>\r\n            <NavItemContainer onClick={() => dispatch(updateBackgroundColor('burlywood'))}>\r\n              <ColorIndicator color='burlywood' />\r\n            </NavItemContainer>\r\n            <NavItemContainer onClick={() => dispatch(updateBackgroundColor('white'))}>\r\n              <ColorIndicator color='white' />\r\n            </NavItemContainer>\r\n          </NavDropdown>\r\n        </Container>\r\n      </Navbar>\r\n      <Row>\r\n        <Col md={3}>\r\n          <OptionsPanel />\r\n        </Col>\r\n        <CanvasContainer md={9}>\r\n          <Harp />\r\n        </CanvasContainer>\r\n      </Row>\r\n    </AppContainer>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nconst AppContainer = styled.div`\r\n  background-color: ${(props) => props.backgroundColor};\r\n`;\r\n\r\nconst DropdownTitle = styled.span`\r\n  color: white;\r\n`;\r\n\r\nconst NavItemContainer = styled(NavDropdown.Item)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ColorIndicator = styled.div`\r\n  width: 22px;\r\n  height: 22px;\r\n  border: 2px solid;\r\n  border-radius: 3px;\r\n  background-color: ${(props) => props.color};\r\n`;\r\n\r\nconst CanvasContainer = styled(Col)`\r\n  overflow: scroll;\r\n`;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}